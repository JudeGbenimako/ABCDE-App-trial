{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": None,
   "id": "15a690ad-8cc9-4ab4-9bdc-5957fdcc2f3b",
   "metadata": {},
   "outputs": [],
   "source": [
    "import streamlit as st\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import plotly.express as px\n",
    "\n",
    "# Load dataset\n",
    "df = pd.read_csv(\"DM2425_ABCDEats_DATASET.csv\")\n",
    "\n",
    "# Sidebar for navigation\n",
    "st.sidebar.title(\"ABCDEats Data Exploration\")\n",
    "page = st.sidebar.selectbox(\"Choose a section\", [\"Data Overview\", \"Customer Segmentation\", \"Insights Dashboard\"])\n",
    "\n",
    "# Data Overview Section\n",
    "if page == \"Data Overview\":\n",
    "    st.title(\"Data Overview\")\n",
    "    \n",
    "    # Display dataset metadata\n",
    "    st.write(\"### Dataset Information\")\n",
    "    st.write(f\"Number of rows: {df.shape[0]}, Number of columns: {df.shape[1]}\")\n",
    "    st.write(\"### Column Names and Types\")\n",
    "    st.write(df.dtypes)\n",
    "    \n",
    "    # Show missing values\n",
    "    st.write(\"### Missing Values\")\n",
    "    st.write(df.isnull().sum())\n",
    "\n",
    "    # Show sample data\n",
    "    st.write(\"### Sample Data\")\n",
    "    st.write(df.head())\n",
    "\n",
    "    # Visualize distribution of a selected column\n",
    "    column = st.selectbox(\"Select column for distribution plot\", df.select_dtypes(include=['float', 'int']).columns)\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.histplot(df[column], kde=True, ax=ax)\n",
    "    st.pyplot(fig)\n",
    "\n",
    "# Customer Segmentation Section\n",
    "elif page == \"Customer Segmentation\":\n",
    "    st.title(\"Customer Segmentation\")\n",
    "\n",
    "    # Plot segmentation results (replace 'segment_column' with actual segmentation column)\n",
    "    segment_column = \"Segment\"  # Example placeholder\n",
    "    if segment_column in df.columns:\n",
    "        fig = px.pie(df, names=segment_column, title=\"Customer Segmentation Distribution\")\n",
    "        st.plotly_chart(fig)\n",
    "\n",
    "    # Display insights for each segment\n",
    "    segment = st.selectbox(\"Choose a segment to explore\", df[segment_column].unique())\n",
    "    segment_data = df[df[segment_column] == segment]\n",
    "    st.write(f\"### Insights for Segment {segment}\")\n",
    "    st.write(segment_data.describe())\n",
    "\n",
    "# Insights Dashboard Section\n",
    "elif page == \"Insights Dashboard\":\n",
    "    st.title(\"Insights Dashboard\")\n",
    "    \n",
    "    # Peak times for promotions\n",
    "    st.write(\"### Peak Times for Promotions\")\n",
    "    fig, ax = plt.subplots()\n",
    "    sns.histplot(df['order_hour'], kde=True, bins=24, ax=ax)  # Assuming 'order_hour' is in the dataset\n",
    "    ax.set_title(\"Order Frequency by Hour\")\n",
    "    ax.set_xlabel(\"Hour\")\n",
    "    ax.set_ylabel(\"Order Frequency\")\n",
    "    st.pyplot(fig)\n",
    "\n",
    "    # Regional preferences visualization\n",
    "    if 'region' in df.columns and 'product_count' in df.columns:\n",
    "        st.write(\"### Regional Cuisine Preferences\")\n",
    "        fig = px.bar(df.groupby(\"region\")[\"product_count\"].mean().reset_index(),\n",
    "                     x=\"region\", y=\"product_count\", title=\"Average Product Count by Region\")\n",
    "        st.plotly_chart(fig)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
